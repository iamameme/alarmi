import PushNotification from 'react-native-push-notification';

export default class NotificationService {

    constructor(onRegister, onNotification) {
        this.configure(onRegister, onNotification);

        this.lastId = 0;
    }

    configure(onRegister, onNotification, gcm = "") {
        PushNotification.configure({
            // (optional) Called when Token is generated (iOS and Android)
            onRegister: onRegister, //this._onRegister.bind(this),

            // (required) Called when a remote or local notification is opened or received
            onNotification: onNotification, //this._onNotification,

            // ANDROID ONLY: GCM Sender ID (optional - not required for local notifications, but is need to receive remote push notifications)
            senderID: gcm,

            // IOS ONLY (optional): default: all - Permissions to register.
            permissions: {
                alert: true,
                badge: true,
                sound: true
            },

            // Should the initial notification be popped automatically
            // default: true
            popInitialNotification: true,

            /**
              * (optional) default: true
              * - Specified if permissions (ios) and token (android and ios) will requested or not,
              * - if not, you must call PushNotificationsHandler.requestPermissions() later
              */
            requestPermissions: true,
        });
    }

    localNotif(id: number, title: string, message: string) {
        PushNotification.localNotification({
            /* Android Only Properties */
            id: id.toString(), // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            ticker: "My Notification Ticker", // (optional)
            autoCancel: true, // (optional) default: true
            largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
            smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
            // bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
            // subText: "This is a subText", // (optional) default: none
            color: "red", // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
            tag: 'some_tag', // (optional) add tag to message
            group: "group", // (optional) add group to message
            ongoing: false, // (optional) set whether this is an "ongoing" notification

            /* iOS only properties */
            alertAction: 'END', // (optional) default: view
            category: null, // (optional) default: null
            userInfo: null, // (optional) default: null (object containing additional notification data)

            /* iOS and Android properties */
            title: title, // (optional)
            message: message, // (required)
            playSound: true, // (optional) default: true
            soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
            // actions: '["Yes", "No"]',  // (Android only) See the doc for notification actions to know more
        });
    }

    clusterNotif(date: Moment, id: number, title: string, message: string, data: any) {
        //console.warn('cluster ' + date.seconds(0 + 5).milliseconds(0).toDate() + ' with id: ' + ((id).toString() + `__cluster ${0}`));
        for (var b = 0; b < 25; b++) {
            PushNotification.localNotificationSchedule({
                date: new Date(date.seconds(b * 5).milliseconds(0).format()), // in 30 secs
                userInfo: { ...data, id: ((id).toString() + `__cluster ${b}`) },

                /* Android Only Properties */
                id: ((id).toString() + `__cluster ${b}`), // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
                ticker: "My Notification Ticker", // (optional)
                autoCancel: true, // (optional) default: true
                largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
                smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
                bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
                subText: "This is a subText", // (optional) default: none
                color: "blue", // (optional) default: system default
                vibrate: true, // (optional) default: true
                vibration: 3000, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
                tag: 'some_tag', // (optional) add tag to message
                group: "group", // (optional) add group to message
                ongoing: false, // (optional) set whether this is an "ongoing" notification

                /* iOS only properties */
                alertAction: 'END', // (optional) default: view
                category: 'null', // (optional) default: null
                // userInfo: null, // (optional) default: null (object containing additional notification data)

                repeatType: 'minute',

                /* iOS and Android properties */
                title: title, // (optional)
                message: message, // (required)
                playSound: true, // (optional) default: true
                soundName: 'alarm_loud.wav', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            });
        }
    }

    cancelClusterNotif(id: number) {
        for (var i = 0; i < 30; i++) {
            PushNotification.cancelLocalNotifications({ id: ((id).toString() + `__cluster ${i}`) });
        }
    }

    scheduleNotif(date: Moment, id: number, title: string, message: string, data: any) {
        //console.warn('regular: ' + date.seconds(0 + 5).milliseconds(0).format() + ' with id: ' + id.toString());
        try {
            PushNotification.localNotificationSchedule({
                date: new Date(date.seconds(0).milliseconds(0).format()), // in 30 secs
                userInfo: { ...data, id: ((id).toString()) },

                /* Android Only Properties */
                id: id.toString(), // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
                ticker: "My Notification Ticker", // (optional)
                autoCancel: true, // (optional) default: true
                largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
                smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
                bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
                subText: "This is a subText", // (optional) default: none
                color: "blue", // (optional) default: system default
                vibrate: true, // (optional) default: true
                vibration: 15000, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
                tag: 'some_tag', // (optional) add tag to message
                group: "group", // (optional) add group to message
                ongoing: false, // (optional) set whether this is an "ongoing" notification

                /* iOS only properties */
                alertAction: 'END', // (optional) default: view
                category: 'null', // (optional) default: null
                // userInfo: null, // (optional) default: null (object containing additional notification data)

                /* iOS and Android properties */
                title: title, // (optional)
                message: message, // (required)
                playSound: true, // (optional) default: true
                soundName: 'alarm_soft.wav', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            });
        } catch (error) {
            console.error(error);
        }
    }

    checkPermission(cbk) {
        return PushNotification.checkPermissions(cbk);
    }

    cancelNotif(id: number) {
        PushNotification.cancelLocalNotifications({ id: id.toString() });
    }

    cancelAll() {
        PushNotification.cancelAllLocalNotifications();
    }
}